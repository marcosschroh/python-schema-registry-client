[tool.poetry]
name = "python-schema-registry-client"
version = "2.4.4"
description = "Python Rest Client to interact against Schema Registry confluent server"
authors = ["Marcos Schroh <schrohm@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "schema_registry"}]

[tool.poetry.dependencies]
python = "^3.7"
fastavro = "^1.7.3"
jsonschema = "^4.17.3"
httpx = "^0.24.0"
aiofiles = "^23.1.0"
faust-streaming = {version = "^0.10.11", optional = true}

[tool.poetry.group.dev.dependencies]
mypy = "^1"
ruff = "^0"
black = "^23"
pytest = "^7"
pytest-cov = "^4"
pytest-mock = "^3.10.0"
pytest-asyncio = "^0.21.0"
faker = "^18.6.0"
dataclasses-avroschema = "^0.43.0"
pydantic = "^1.10.7"
codecov = "^2.1.13"
types-aiofiles = "^23.1.0.2"
types-jsonschema = "^4.17.0.7"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1"
mkdocs-material = "^9"
mkdocstrings = {extras = ["python"], version = "^0.21.2"}

[tool.poetry.group.ci-publish.dependencies]
commitizen = "^3"

[tool.poetry.extras]
faust = ["faust-streaming"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development",
]

[tool.black]
line-length = 120
target_version = ['py37']

[tool.mypy]
allow_empty_bodies = true

[tool.ruff]
line-length = 120
select = [
    # Pyflakes
    "F",
    # isort
    "I001"
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    ".venv",
]

[tool.ruff.pydocstyle]
convention = "google"

[tool.commitizen]
version = "2.4.4"
tag_format = "v$version"
version_files = [
    "pyproject.toml:version",
]
update_changelog_on_bump = true
